import{co as Te,c2 as Be,r as i,j as ie,aJ as f,a6 as E,d as t,bb as l,u as _,Q as o,a4 as x,bE as p,ad as r,a5 as I,bD as O,a7 as c,ax as Se,bd as z,bw as se}from"./index.c2759519.js";import{Q as q}from"./QSpace.0a8142f3.js";import{Q as ee}from"./QBtnGroup.8f9b424d.js";import{Q as te}from"./QToolbar.429afd7f.js";import{Q as j,h as de,b as T}from"./helpers.e1b33f8c.js";import{Q as h}from"./QTd.c4387210.js";import{Q as Ue}from"./QTr.24bb7a38.js";import{Q as N}from"./QInput.a39034c7.js";import{Q as Ye,a as $e}from"./QTable.a68d6b30.js";import{Q as F}from"./QBadge.78de15ff.js";import{Q as ce}from"./QCardActions.22645da9.js";import{Q as ae}from"./QDialog.27749d9f.js";import{a as Ae}from"./rtl.c15db302.js";import{Q as me,a as pe}from"./QList.316d85fa.js";import{g as Me,p as G,Q as ve}from"./module_calls.cbc973f8.js";import{C as fe}from"./ClosePopup.cb9f645c.js";import{e as Ee,a as Ne}from"./excel.5d19a2ad.js";import{a as Fe}from"./use-quasar.f495e260.js";import{a as Re,u as ye,b as Le}from"./index.ae04ba90.js";import{h as B}from"./moment.9709ab41.js";import{u as Oe}from"./product-store.ef179098.js";import{u as ze}from"./auth-store.6b6b7719.js";import"./use-key-composition.7c8f5cd3.js";const _e=[{name:"product",required:!0,label:"Product",align:"left",field:u=>u.name,format:u=>`${u}`,sortable:!0},{name:"buying_price",align:"center",label:"Buying Price (Per Unit)",field:"buying_price",sortable:!0},{name:"quantity",align:"center",label:"Quantity",field:"quantity",sortable:!0},{name:"total",align:"center",label:"Total Cost",field:"total",sortable:!0},{name:"measurement",align:"center",label:"Measurement",field:"measurement",sortable:!0},{name:"department",align:"center",label:"Department",field:"department",sortable:!0},{name:"user",align:"center",label:"Created By",field:"user",sortable:!0},{name:"created_at",align:"center",label:"Created On",field:"created_at",sortable:!0},{name:"actions",align:"center",label:"Actions",field:"created_at"}],S=Te(),b=S==null?void 0:S.token,je=Be("inventories",{state:()=>({inventories:[]}),actions:{async fetchInventories(){if(b){const u=await Me("inventories",b);return this.inventories=u==null?void 0:u.data,this.inventories}},async fetchInventoriesInDateRange(u){if(b)return await G(u,"get_older_inventories",b)},async createInventory(u){var w;if(u.user_uuid=(w=S==null?void 0:S.user)==null?void 0:w.uuid,b)return await G(u,"inventories",b)},async updateInventory(u){if(b)return await G(u,"update_inventory",b)},async deleteInventory(u){if(b)return await G(u,"delete_inventory",b)}}});const Ge={class:"q-pa-md"},Je={key:0},We={key:1},He={class:"text-center error_msg"},Ke={class:"text-h6"},Xe={key:0},Ze=c("br",null,null,-1),et={class:"text-center error_msg"},tt={class:"text-center q-ma-sm"},at=["max"],nt=c("br",null,null,-1),lt={key:0},ot=["max"],Pt={__name:"Inventories",setup(u){const w=ze(),U=Fe(),Y=Re(),$=je(),ne=Oe(),J=i(!1),P=i(!1),C=i(!1),A=i(!1),R=i(!1),W=i(""),M=i(""),v=i(1),y=i(1),m=ie({product_id:"",measurement_id:""}),H=i(""),V=i("");let L=[];const K=i("Today"),ge=i("2019/03/01"),be=i("2019/03/01"),le=new Date().toISOString().split("T")[0],s=ie({from:"",to:""}),Qe=()=>X.value=!0,X=i(!1),D=i([]),{isLoading:ke,isError:oe}=ye("inventories",()=>$.fetchInventories(),{onSuccess:n=>{D.value=[],n==null||n.forEach(a=>{const e={product:a.product,buying_price:a.buying_price,quantity:a.quantity,total:a.total,measurement:a.measurement,department:a.department,user:a.user,created_at:a.created_at};D.value.push(e)})}});ye("products",()=>ne.fetchProducts(),{onSuccess:n=>{L=n.map(a=>({name:a.name,uuid:a.uuid,quantity:a.quantity,measurement:a.measurement,buying_price:a.buying_price}))}});const Z=i(L),he=(n,a)=>{if(n===""){a(()=>{Z.value=L});return}a(()=>{const e=n.toLowerCase();Z.value=L.filter(g=>g.name.toLowerCase().indexOf(e)>-1)})},we=async n=>{if(confirm(`Continue with the operation. Delete ${n.name} ?`)){const e=await $.deleteInventory({uuid:n.uuid});e.status==="success"?(Y.refetchQueries("inventories"),Q(e.message,"green","top")):Q("There was an error","red","top-right")}},Ce=()=>{ne.products.length===0?Q("You need to create at least one PRODUCT in order to create inventories!","orange","top"):(M.value="Create Inventory",P.value=!0,R.value=!1)},Ie=n=>{v.value=n.quantity,y.value=n.buying_price,M.value=`Update Actual Quantity for  ${n.product}`,H.value=n,A.value=!0},qe=async()=>{C.value=!0,V.value="";const n={product_uuid:m.product_id.uuid,measurement_name:m.product_id.measurement,quantity:v.value,buying_price:y.value};if(n.product_uuid&&n.measurement_name&&n.quantity&&n.buying_price){const a=await $.createInventory(n);a.status==="success"?(Y.refetchQueries("inventories"),Y.refetchQueries("finished_products"),m.product_id="",m.measurement_id="",v.value=1,m.buying_price=1,P.value=!1,C.value=!1,Q(a.message,"green","top")):(V.value=a.message,Q(a.message,"red","top-right"))}else C.value=!1,V.value="Product, Quantity and Buying Price are required!",Q("Product, Quantity and Buying Price are required!","red","top-right")},re=async()=>{C.value=!0;const n={quantity:Number(v.value),buying_price:Number(y.value),inventory_uuid:H.value.uuid};if(n.quantity&&n.buying_price){const a=await $.updateInventory(n);a.status==="success"?(Y.refetchQueries("inventories"),v.value=1,y.value=1,P.value=!1,A.value=!1,R.value=!1,M.value="",C.value=!1,Q(a.message,"green","top")):Q("There was an error","red","top-right")}else C.value=!1,V.value="Quantity and Buying price are required!",Q("Quantity and Buying price are required!","red","top-right")},Ve=()=>{ge.value=be.value;let n=B(s.from),a=B(s.to),e={};parseInt(n.diff(a,"seconds"))>=0?(e.from=s.from,e.to=s.to):(e.from=s.to,e.to=s.from),xe(e),U.loading.show({message:`Please Wait. Fetching data between ${B(s.from).format("DD-MM-YYYY")} - ${B(s.to).format("DD-MM-YYYY")}`,boxClass:"bg-indigo text-white",spinnerColor:"white"})},{mutate:xe}=Le(n=>$.fetchInventoriesInDateRange(n),{onSuccess:n=>{var a,e,g;K.value=`(From: ${B(s.from).format("DD-MM-YYYY")} - To: ${B(s.to).format("DD-MM-YYYY")}). ${(a=n==null?void 0:n.data)==null?void 0:a.length} Records. Total Amount: ${(e=n==null?void 0:n.data)==null?void 0:e.reduce((d,k)=>d+k.total,0)}`,U.loading.hide(),J.value=!0,D.value=[],(g=n==null?void 0:n.data)==null||g.forEach(d=>{const k={product:d.product,buying_price:d.buying_price,quantity:d.quantity,total:d.total,measurement:d.measurement,department:d.department,user:d.user,created_at:d.created_at};D.value.push(k)})}}),ue=()=>{P.value=!1,A.value=!1,m.product_id="",v.value=1,y.value=1,H.value="",V.value=""},Q=(n,a,e)=>{U.notify({message:n,color:a,position:e})},Pe=n=>{const a=n.map(e=>({name:e.name,inventories:e.inventories.length,created_at:e.created_at}));Ee(a,_e,Ne,U,"InventoriesData")};return(n,a)=>(f(),E("div",Ge,[t(j,{dark:"",class:"bg-primary q-mb-sm"},{default:l(()=>[t(te,null,{default:l(()=>[t(p,{dense:"",flat:"",icon:"arrow_back",label:"Back",onClick:a[0]||(a[0]=e=>n.$router.back())}),t(q),r(o(K.value),1),t(q),t(ee,{unelevated:""},{default:l(()=>[J.value?(f(),x(p,{key:0,unelevated:"",icon:"autorenew",size:"sm",color:"orange",label:"Reset",onClick:a[1]||(a[1]=()=>{K.value="Today",_(Y).refetchQueries("inventories"),J.value=!1})})):I("",!0),t(p,{unelevated:"",icon:"event",size:"sm",color:"indigo",label:"Calendar (Older Inventories)",onClick:a[2]||(a[2]=e=>Qe())})]),_:1})]),_:1})]),_:1}),_(ke)?(f(),E("div",Je,"Loading inventories...")):_(oe)?(f(),E("div",We,"An error has occurred: "+o(_(oe)),1)):(f(),x(Ye,{key:2,title:"Purchases/Inventories",rows:D.value,columns:_(_e),separator:"cell","row-key":"name",filter:W.value,dense:""},{body:l(e=>[t(Ue,{props:e},{default:l(()=>{var g,d,k;return[t(h,{key:"product",props:e},{default:l(()=>[r(o(e.row.product),1)]),_:2},1032,["props"]),t(h,{key:"buying_price",props:e},{default:l(()=>[r(o(e.row.buying_price),1)]),_:2},1032,["props"]),t(h,{key:"quantity",props:e},{default:l(()=>[r(o(e.row.quantity),1)]),_:2},1032,["props"]),t(h,{key:"total",props:e},{default:l(()=>[r(o(e.row.total),1)]),_:2},1032,["props"]),t(h,{key:"measurement",props:e},{default:l(()=>[r(o(e.row.measurement),1)]),_:2},1032,["props"]),t(h,{key:"department",props:e},{default:l(()=>[r(o(e.row.department),1)]),_:2},1032,["props"]),t(h,{key:"user",props:e},{default:l(()=>[r(o(e.row.user),1)]),_:2},1032,["props"]),t(h,{key:"created_at",props:e},{default:l(()=>[r(o(e.row.created_at),1)]),_:2},1032,["props"]),_(de)((k=(d=(g=_(w))==null?void 0:g.user)==null?void 0:d.user)==null?void 0:k.roles)?(f(),x(h,{key:"actions",props:e},{default:l(()=>[t(O,{color:"blue",name:"edit",onClick:De=>Ie(e.row),style:{cursor:"pointer"},size:"20px",class:"q-mr-md"},null,8,["onClick"]),t(O,{color:"red",name:"delete",onClick:De=>we(e.row),style:{cursor:"pointer"},size:"20px"},null,8,["onClick"])]),_:2},1032,["props"])):I("",!0)]}),_:2},1032,["props"])]),"top-right":l(()=>{var e,g,d;return[t(N,{borderless:"",dense:"",outlined:"",rounded:"",debounce:"300",modelValue:W.value,"onUpdate:modelValue":a[3]||(a[3]=k=>W.value=k),placeholder:"Search",class:"q-mr-md"},{append:l(()=>[t(O,{name:"search"})]),_:1},8,["modelValue"]),_(de)((d=(g=(e=_(w))==null?void 0:e.user)==null?void 0:g.user)==null?void 0:d.roles)?(f(),x(ee,{key:0},{default:l(()=>[t(p,{onClick:Ce,dense:"",color:"primary",icon:"add",label:"Add"}),t(p,{dense:"",flat:"",color:"primary","icon-right":"archive",label:"Export",class:"q-ml-sm","no-caps":"",onClick:a[4]||(a[4]=k=>Pe(D.value))})]),_:1})):I("",!0)]}),_:1},8,["rows","columns","filter"])),t(ae,{modelValue:A.value,"onUpdate:modelValue":a[7]||(a[7]=e=>A.value=e),persistent:""},{default:l(()=>[t(j,{style:{width:"500px"}},{default:l(()=>[t(te,null,{default:l(()=>[r(o(M.value)+" ",1),t(q),c("small",null,[t(F,null,{default:l(()=>[r("Total: "+o(v.value*y.value),1)]),_:1})])]),_:1}),t(T,null,{default:l(()=>[t(N,{dense:"",outlined:"",modelValue:v.value,"onUpdate:modelValue":a[5]||(a[5]=e=>v.value=e),label:"Actual Quantity",type:"number",min:"1",oninput:"validity.valid||(value='');"},null,8,["modelValue"])]),_:1}),t(T,null,{default:l(()=>[t(N,{dense:"",outlined:"",modelValue:y.value,"onUpdate:modelValue":a[6]||(a[6]=e=>y.value=e),label:"Buying Price",type:"number",min:"1",oninput:"validity.valid||(value='');"},null,8,["modelValue"])]),_:1}),c("div",He,[c("small",null,o(V.value),1)]),t(ce,{align:"right"},{default:l(()=>[t(p,{flat:"",label:"Cancel",color:"red",onClick:ue}),t(q),t(p,{flat:"",label:"Edit Inventory",color:"primary",onClick:re})]),_:1})]),_:1})]),_:1},8,["modelValue"]),t(ae,{modelValue:P.value,"onUpdate:modelValue":a[11]||(a[11]=e=>P.value=e),persistent:""},{default:l(()=>[t(j,{style:{width:"600px"}},{default:l(()=>[t(te,null,{default:l(()=>[c("div",Ke,o(M.value),1),t(q),c("small",null,[c("i",null,"Total: "+o(v.value*y.value),1)]),t(q),m.product_id?(f(),E("small",Xe,[t(F,{class:"q-mr-sm"},{default:l(()=>[r("Measurement: "+o(m.product_id.measurement),1)]),_:1}),t(F,null,{default:l(()=>[r("Available Quantity: "+o(m.product_id.quantity),1)]),_:1}),Ze,t(F,null,{default:l(()=>[r("Previous Buying Price: "+o(m.product_id.buying_price),1)]),_:1})])):I("",!0)]),_:1}),t(T,null,{default:l(()=>[t($e,{outlined:"",clearable:"",dense:"",modelValue:m.product_id,"onUpdate:modelValue":a[8]||(a[8]=e=>m.product_id=e),"use-input":"","input-debounce":"0",label:"Select Product",options:Z.value,"option-value":"uuid","option-label":"name",onFilter:he,behavior:"menu",hint:"Type in product name to filter..."},{option:l(e=>[t(me,Se({dense:""},e.itemProps),{default:l(()=>[t(pe,null,{default:l(()=>[t(Ae,null,{default:l(()=>[r(o(e.opt.name)+" : ",1),c("small",null,[t(F,{color:"orange"},{default:l(()=>[r("Available Qty: "+o(e.opt.quantity),1)]),_:2},1024)])]),_:2},1024)]),_:2},1024)]),_:2},1040)]),"no-option":l(()=>[t(me,null,{default:l(()=>[t(pe,{class:"text-grey"},{default:l(()=>[t(p,{size:"sm",outline:"",label:"No results? CLick here to create new product.",to:"/products",color:"primary"})]),_:1})]),_:1})]),_:1},8,["modelValue","options"])]),_:1}),t(T,null,{default:l(()=>[t(N,{dense:"",outlined:"",modelValue:v.value,"onUpdate:modelValue":a[9]||(a[9]=e=>v.value=e),label:"Product Quantity",type:"number",min:"1",oninput:"validity.valid||(value='');"},null,8,["modelValue"])]),_:1}),t(T,null,{default:l(()=>[t(N,{dense:"",outlined:"",modelValue:y.value,"onUpdate:modelValue":a[10]||(a[10]=e=>y.value=e),label:"Buying Price (Per Unit)",type:"number",min:"1",oninput:"validity.valid||(value='');"},null,8,["modelValue"])]),_:1}),c("div",et,[c("small",null,o(V.value),1)]),t(ce,{align:"right"},{default:l(()=>[t(p,{flat:"",label:"Cancel",color:"red",onClick:ue}),t(q),m.product_id&&!R.value?(f(),x(p,{key:0,flat:"",label:"Add Inventory",color:"primary",onClick:qe,loading:C.value},null,8,["loading"])):I("",!0),m.product_id&&R.value?(f(),x(p,{key:1,flat:"",label:"Edit Inventory",color:"primary",onClick:re,loading:C.value},null,8,["loading"])):I("",!0)]),_:1})]),_:1})]),_:1},8,["modelValue"]),t(ae,{modelValue:X.value,"onUpdate:modelValue":a[14]||(a[14]=e=>X.value=e),persistent:""},{default:l(()=>[t(j,{class:"bg-indigo text-white text-center q-pa-sm",style:{width:"300px"}},{default:l(()=>[c("div",tt,[c("b",null,[t(O,{name:"events"}),r(" Date Picker")])]),t(ve,{color:"white"}),t(T,null,{default:l(()=>[c("div",null,[r(" From : "),z(c("input",{type:"date","onUpdate:modelValue":a[12]||(a[12]=e=>s.from=e),max:_(le)},null,8,at),[[se,s.from]])]),nt,s.from?(f(),E("div",lt,[r(" To : "),z(c("input",{type:"date","onUpdate:modelValue":a[13]||(a[13]=e=>s.to=e),max:_(le)},null,8,ot),[[se,s.to]])])):I("",!0)]),_:1}),t(ve,{color:"yellow"}),t(ee,{flat:"",class:"full-width"},{default:l(()=>[z(t(p,{dense:"",label:"Cancel",color:"yellow",flat:""},null,512),[[fe]]),t(q),s.to?z((f(),x(p,{key:0,dense:"",label:"Fetch Inventories",color:"white",flat:"",onClick:Ve},null,512)),[[fe]]):I("",!0)]),_:1})]),_:1})]),_:1},8,["modelValue"])]))}};export{Pt as default};
